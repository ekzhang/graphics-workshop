import { MonitorBindingController } from '../controller/monitor-binding';
import { BladeApi } from './blade';
import { TpUpdateEvent } from './tp-event';
export interface MonitorBindingApiEvents<T> {
    update: {
        event: TpUpdateEvent<T>;
    };
}
/**
 * The API for the monitor binding between the parameter and the pane.
 */
export declare class MonitorBindingApi<T> extends BladeApi<MonitorBindingController<T>> {
    private readonly emitter_;
    /**
     * @hidden
     */
    constructor(controller: MonitorBindingController<T>);
    on<EventName extends keyof MonitorBindingApiEvents<T>>(eventName: EventName, handler: (ev: MonitorBindingApiEvents<T>[EventName]['event']) => void): MonitorBindingApi<T>;
    refresh(): void;
    private onBindingUpdate_;
}
