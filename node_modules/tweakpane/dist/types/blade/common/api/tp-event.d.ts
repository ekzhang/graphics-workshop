/**
 * A base class of Tweakpane API events.
 */
export declare class TpEvent {
    /**
     * The event dispatcher.
     */
    readonly target: unknown;
    /**
     * @hidden
     */
    constructor(target: unknown);
}
/**
 * An event class for value changes of input bindings.
 * @template T The type of the value.
 */
export declare class TpChangeEvent<T> extends TpEvent {
    /**
     * The preset key of the event target.
     */
    readonly presetKey?: string;
    /**
     * The value.
     */
    readonly value: T;
    /**
     * @hidden
     */
    constructor(target: unknown, value: T, presetKey?: string);
}
/**
 * An event class for value updates of monitor bindings.
 * @template T The type of the value.
 */
export declare class TpUpdateEvent<T> extends TpEvent {
    /**
     * The preset key of the event target.
     */
    readonly presetKey: string;
    /**
     * The value.
     */
    readonly value: T;
    /**
     * @hidden
     */
    constructor(target: unknown, value: T, presetKey: string);
}
/**
 * An event class for folder.
 */
export declare class TpFoldEvent extends TpEvent {
    /**
     * The current state of the folder expansion.
     */
    readonly expanded: boolean;
    /**
     * @hidden
     */
    constructor(target: unknown, expanded: boolean);
}
