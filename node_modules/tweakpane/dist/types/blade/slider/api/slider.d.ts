import { SliderTextController } from '../../../common/number/controller/slider-text';
import { BladeApi, LabelableApi } from '../../common/api/blade';
import { ApiChangeEvents } from '../../common/api/types';
import { LabeledController } from '../../labeled/controller/labeled';
export declare class SliderBladeApi extends BladeApi<LabeledController<SliderTextController>> implements LabelableApi {
    private readonly emitter_;
    constructor(controller: LabeledController<SliderTextController>);
    get label(): string | undefined;
    set label(label: string | undefined);
    get maxValue(): number;
    set maxValue(maxValue: number);
    get minValue(): number;
    set minValue(minValue: number);
    get value(): number;
    set value(value: number);
    on<EventName extends keyof ApiChangeEvents<number>>(eventName: EventName, handler: (ev: ApiChangeEvents<number>[EventName]['event']) => void): this;
}
