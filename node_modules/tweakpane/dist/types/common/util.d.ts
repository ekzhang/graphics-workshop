import { ArrayStyleListOptions, InputParams, ObjectStyleListOptions } from '../blade/common/api/types';
import { Constraint } from './constraint/constraint';
import { ListConstraint, ListItem } from './constraint/list';
import { ValueController } from './controller/value';
export declare function normalizeListOptions<T>(options: ArrayStyleListOptions<T> | ObjectStyleListOptions<T>): ListItem<T>[];
/**
 * Tries to create a list constraint.
 * @template T The type of the raw value.
 * @param params The input parameters object.
 * @return A constraint or null if not found.
 */
export declare function createListConstraint<T>(params: InputParams): ListConstraint<T> | null;
/**
 * @hidden
 */
export declare function findListItems<T>(constraint: Constraint<T> | undefined): ListItem<T>[] | null;
/**
 * @hidden
 */
export declare function getSuitableDecimalDigits(constraint: Constraint<number> | undefined, rawValue: number): number;
/**
 * @hidden
 */
export declare function getBaseStep(constraint: Constraint<number> | undefined): number;
/**
 * @hidden
 */
export declare function getSuitableDraggingScale(constraint: Constraint<number> | undefined, rawValue: number): number;
export declare function polyfillViewProps<T>(controller: ValueController<T>, pluginId: string): void;
