import { ValueMap } from '../model/value-map';
import { ViewProps } from '../model/view-props';
export declare function bindValueMap<O extends Record<string, unknown>, Key extends keyof O>(valueMap: ValueMap<O>, key: Key, applyValue: (value: O[Key]) => void): void;
export declare function bindClassModifier(viewProps: ViewProps, elem: HTMLElement): void;
interface Disableable {
    disabled: boolean;
}
export declare function bindDisabled(viewProps: ViewProps, target: Disableable): void;
export declare function bindTabIndex(viewProps: ViewProps, elem: HTMLOrSVGElement): void;
export declare function bindTextContent<Key extends string, O extends {
    [key in Key]: string | undefined;
}>(valueMap: ValueMap<O>, key: Key, elem: HTMLElement): void;
export {};
