import { ValueController } from '../../../common/controller/value';
import { PrimitiveValue } from '../../../common/model/primitive-value';
import { Value } from '../../../common/model/value';
import { ViewProps } from '../../../common/model/view-props';
import { Color } from '../model/color';
import { PickedColor } from '../model/picked-color';
import { ColorPickerView } from '../view/color-picker';
import { ColorTextController } from './color-text';
interface Config {
    pickedColor: PickedColor;
    supportsAlpha: boolean;
    viewProps: ViewProps;
}
/**
 * @hidden
 */
export declare class ColorPickerController implements ValueController<Color> {
    readonly expanded: PrimitiveValue<boolean>;
    readonly pickedColor: PickedColor;
    readonly view: ColorPickerView;
    readonly viewProps: ViewProps;
    triggerElement: HTMLElement | null;
    private alphaIcs_;
    private hPaletteIc_;
    private svPaletteIc_;
    private tc_;
    constructor(doc: Document, config: Config);
    get value(): Value<Color>;
    get textController(): ColorTextController;
    private onFocusableElementBlur_;
    private onKeyDown_;
}
export {};
