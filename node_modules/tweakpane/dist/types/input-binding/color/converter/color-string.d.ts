import { Parser } from '../../../common/converter/parser';
import { Color } from '../model/color';
export declare type StringColorNotation = 'hex.rgb' | 'hex.rgba' | 'func.hsl' | 'func.hsla' | 'func.rgb' | 'func.rgba';
/**
 * @hidden
 */
export declare function getColorNotation(text: string): StringColorNotation | null;
/**
 * @hidden
 */
export declare const CompositeColorParser: Parser<Color>;
export declare function hasAlphaComponent(notation: StringColorNotation): boolean;
/**
 * @hidden
 */
export declare function colorFromString(value: unknown): Color;
/**
 * @hidden
 */
export declare function colorToHexRgbString(value: Color): string;
/**
 * @hidden
 */
export declare function colorToHexRgbaString(value: Color): string;
/**
 * @hidden
 */
export declare function colorToFunctionalRgbString(value: Color): string;
/**
 * @hidden
 */
export declare function colorToFunctionalRgbaString(value: Color): string;
/**
 * @hidden
 */
export declare function colorToFunctionalHslString(value: Color): string;
/**
 * @hidden
 */
export declare function colorToFunctionalHslaString(value: Color): string;
export declare function getColorStringifier(notation: StringColorNotation): (value: Color) => string;
