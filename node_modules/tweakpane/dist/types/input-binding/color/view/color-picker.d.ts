import { PrimitiveValue } from '../../../common/model/primitive-value';
import { NumberTextView } from '../../../common/number/view/number-text';
import { View } from '../../../common/view/view';
import { PickedColor } from '../model/picked-color';
import { APaletteView } from './a-palette';
import { ColorTextView } from './color-text';
import { HPaletteView } from './h-palette';
import { SvPaletteView } from './sv-palette';
interface Config {
    alphaViews: {
        palette: APaletteView;
        text: NumberTextView;
    } | null;
    expanded: PrimitiveValue<boolean>;
    hPaletteView: HPaletteView;
    pickedColor: PickedColor;
    supportsAlpha: boolean;
    svPaletteView: SvPaletteView;
    textView: ColorTextView;
}
/**
 * @hidden
 */
export declare class ColorPickerView implements View {
    readonly element: HTMLElement;
    readonly pickedColor: PickedColor;
    private readonly expanded_;
    private alphaViews_;
    private hPaletteView_;
    private svPaletteView_;
    private textView_;
    constructor(doc: Document, config: Config);
    get allFocusableElements(): HTMLElement[];
    private update_;
    private onValueChange_;
    private onFoldableChange_;
}
export {};
